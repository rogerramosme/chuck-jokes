{"version":3,"sources":["store/reducers/categories/categoriesReducer.js","store/reducers/joke/jokeReducer.js","routes.js","components/Loading/Loading.style.js","components/Loading/Loading.js","store/reducers/index.js","services/request.js","services/categories.js","services/joke.js","sagas/modules/categories/categoriesSaga.js","sagas/modules/joke/jokeSaga.js","sagas/rootSaga.js","config/theme.js","config/global-styles.js","App.js","store/index.js","serviceWorker.js","index.js"],"names":["initialState","isFetching","isSuccess","isError","error","data","ACTION_TYPES","CATEGORIES_REQUEST","CATEGORIES_REQUEST_SUCCESS","CATEGORIES_REQUEST_ERROR","categoriesRequest","type","categoriesRequestSuccess","payload","categoriesRequestError","state","JOKE_REQUEST","JOKE_REQUEST_SUCCESS","JOKE_REQUEST_ERROR","jokeRequest","jokeRequestSuccess","jokeRequestError","Intro","lazy","Categories","Joke","ErrorPage","ROUTES","INTRO","CATEGORIES","RAMDOM_JOKE","history","createBrowserHistory","fallback","exact","path","component","render","errorMessage","LoadingOverlay","styled","div","props","theme","colors","yellow","span","black","Loading","combineReducers","categories","joke","url","axios","get","request","category","requestUrl","getCategories","watchCategories","call","api","response","put","takeLatest","getJoke","watchJoke","rootSaga","all","fork","Tokens","blue","grey","white","fonts","title","fontSize","lineHeight","subtitle","body","button","weight","normal","light","defaults","radius","transitionTime","createGlobalStyle","sagaMiddleWare","createSagaMiddleware","store","middleWares","composeEnhancers","window","compose","createStore","rootReducer","applyMiddleware","configureStore","run","useEffect","document","querySelector","classList","add","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","ReactDOM","StrictMode","App","getElementById","URL","process","href","origin","addEventListener","fetch","headers","contentType","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.c8840949.chunk.js","sourcesContent":["export const initialState = {\n  isFetching: false,\n  isSuccess: false,\n  isError: false,\n  error: null,\n  data: []\n}\n\nexport const ACTION_TYPES = {\n  CATEGORIES_REQUEST: 'CATEGORIES_REQUEST',\n  CATEGORIES_REQUEST_SUCCESS: 'CATEGORIES_REQUEST_SUCCESS',\n  CATEGORIES_REQUEST_ERROR: 'CATEGORIES_REQUEST_ERROR'\n}\n\nexport const categoriesRequest = () => ({\n  type: ACTION_TYPES.CATEGORIES_REQUEST\n})\n\nexport const categoriesRequestSuccess = payload => ({\n  type: ACTION_TYPES.CATEGORIES_REQUEST_SUCCESS,\n  payload\n})\n\nexport const categoriesRequestError = error => ({\n  type: ACTION_TYPES.CATEGORIES_REQUEST_ERROR,\n  payload: error\n})\n\nexport default (state = initialState, { type, payload }) => {\n  switch (type) {\n    case ACTION_TYPES.CATEGORIES_REQUEST:\n      return {\n        ...state,\n        isFetching: true,\n        isSuccess: false,\n        isError: false,\n        error: null\n      }\n    case ACTION_TYPES.CATEGORIES_REQUEST_SUCCESS:\n      return {\n        ...state,\n        isFetching: false,\n        isSuccess: true,\n        data: payload.data\n      }\n    case ACTION_TYPES.CATEGORIES_REQUEST_ERROR:\n      return {\n        ...state,\n        isFetching: false,\n        isSuccess: false,\n        isError: true,\n        error: payload,\n        data: []\n      }\n    default:\n      return state\n  }\n}\n","export const initialState = {\n  isFetching: false,\n  isSuccess: false,\n  isError: false,\n  error: null,\n  data: {}\n}\n\nexport const ACTION_TYPES = {\n  JOKE_REQUEST: 'JOKE_REQUEST',\n  JOKE_REQUEST_SUCCESS: 'JOKE_REQUEST_SUCCESS',\n  JOKE_REQUEST_ERROR: 'JOKE_REQUEST_ERROR'\n}\n\nexport const jokeRequest = payload => ({\n  type: ACTION_TYPES.JOKE_REQUEST,\n  payload\n})\n\nexport const jokeRequestSuccess = payload => ({\n  type: ACTION_TYPES.JOKE_REQUEST_SUCCESS,\n  payload\n})\n\nexport const jokeRequestError = error => ({\n  type: ACTION_TYPES.JOKE_REQUEST_ERROR,\n  payload: error\n})\n\nexport default (state = initialState, { type, payload }) => {\n  switch (type) {\n    case ACTION_TYPES.JOKE_REQUEST:\n      return {\n        ...state,\n        isFetching: true,\n        isError: false,\n        error: null\n      }\n    case ACTION_TYPES.JOKE_REQUEST_SUCCESS:\n      return {\n        ...state,\n        isFetching: false,\n        isSuccess: true,\n        data: payload.data\n      }\n    case ACTION_TYPES.JOKE_REQUEST_ERROR:\n      return {\n        ...state,\n        isFetching: false,\n        isSuccess: false,\n        isError: true,\n        error: payload,\n        data: {}\n      }\n    default:\n      return state\n  }\n}\n","import React, { lazy, Suspense } from 'react'\nimport Loading from 'components/Loading'\nimport { createBrowserHistory } from 'history'\nimport { HashRouter as Router, Switch, Route } from 'react-router-dom'\n\nconst Intro = lazy(() => import('pages/Intro'))\nconst Categories = lazy(() => import('pages/Categories'))\nconst Joke = lazy(() => import('pages/Joke'))\nconst ErrorPage = lazy(() => import('components/Error'))\n\nexport const ROUTES = {\n  INTRO: '/',\n  CATEGORIES: '/categories',\n  RAMDOM_JOKE: '/random-joke'\n}\n\nexport default () => (\n  <Router history={createBrowserHistory()}>\n    <Suspense fallback={<Loading />}>\n      <Switch>\n        <Route exact path={ROUTES.INTRO} component={Intro} />\n        <Route exact path={ROUTES.CATEGORIES} component={Categories} />\n        <Route exact path={`${ROUTES.RAMDOM_JOKE}/:category?`} component={Joke} />\n        <Route\n          path=\"*\"\n          render={() => <ErrorPage errorMessage=\"The page you are looking for doesn't exist\" />}\n        />\n      </Switch>\n    </Suspense>\n  </Router>\n)\n","import styled from 'styled-components'\n\nexport const LoadingOverlay = styled.div`\n  position: fixed;\n  margin: auto;\n  top: 0;\n  left: 0;\n  bottom: 0;\n  right: 0;\n  width: 55px;\n  height: 55px;\n  z-index: 999;\n  background-color: ${props => props.theme.colors.yellow};\n`\nexport default styled.span`\n  display: block;\n  width: 100%;\n  height: 100%;\n  border: 4px solid transparent;\n  border-top: 4px solid ${props => props.theme.colors.black};\n  border-left: 4px solid ${props => props.theme.colors.black};\n  border-radius: 50%;\n  animation: rotate 2s linear infinite;\n`\n","import React from 'react'\nimport LoadingSpinner, { LoadingOverlay } from './Loading.style'\n\nconst Loading = ({ ...props }) => (\n  <LoadingOverlay>\n    <LoadingSpinner {...props} />\n  </LoadingOverlay>\n)\n\nexport default Loading\n","import { combineReducers } from 'redux'\nimport categories from './categories'\nimport joke from './joke'\n\nexport default combineReducers({\n  categories,\n  joke\n})\n","import axios from 'axios'\n\nexport const BASE_URL = 'https://api.chucknorris.io/jokes'\n\nexport default url => axios.get(BASE_URL + url)\n","import request from './request'\n\nconst API_URL = '/categories'\n\nexport default () => request(API_URL)\n","import request from './request'\n\nconst RANDOM_JOKE_BY_CATEGORY = '/random'\n\nexport default category => {\n  const requestUrl = category\n    ? `${RANDOM_JOKE_BY_CATEGORY}/?category=${category}`\n    : RANDOM_JOKE_BY_CATEGORY\n\n  return request(requestUrl)\n}\n","import { put, takeLatest, call } from 'redux-saga/effects'\nimport * as api from 'services'\nimport {\n  ACTION_TYPES,\n  categoriesRequestSuccess,\n  categoriesRequestError\n} from 'store/reducers/categories'\n\nconst { CATEGORIES_REQUEST } = ACTION_TYPES\n\nexport function* getCategories() {\n  try {\n    const response = yield call(api.categories)\n    yield put(categoriesRequestSuccess(response))\n  } catch (error) {\n    yield put(categoriesRequestError(error))\n  }\n}\n\nexport default function* watchCategories() {\n  yield takeLatest(CATEGORIES_REQUEST, getCategories)\n}\n","import { put, takeLatest, call } from 'redux-saga/effects'\nimport * as api from 'services'\nimport { ACTION_TYPES, jokeRequestSuccess, jokeRequestError } from 'store/reducers/joke'\n\nconst { JOKE_REQUEST } = ACTION_TYPES\n\nexport function* getJoke({ payload }) {\n  try {\n    const response = yield call(api.joke, payload)\n    yield put(jokeRequestSuccess(response))\n  } catch (error) {\n    yield put(jokeRequestError(error))\n  }\n}\n\nexport default function* watchJoke() {\n  yield takeLatest(JOKE_REQUEST, getJoke)\n}\n","import { all, fork } from 'redux-saga/effects'\nimport watchCategories from './modules/categories'\nimport watchJoke from './modules/joke'\n\nexport default function* rootSaga() {\n  yield all([fork(watchCategories), fork(watchJoke)])\n}\n","const Tokens = {\n  colors: {\n    yellow: '#fcd146',\n    blue: '#0057ff',\n    black: '#161212',\n    grey: '#4f4f4f',\n    white: '#ffffff'\n  },\n  fonts: {\n    title: {\n      fontSize: '48px',\n      lineHeight: '56px'\n    },\n    subtitle: {\n      fontSize: '24px',\n      lineHeight: '30px'\n    },\n    body: {\n      fontSize: '18px',\n      lineHeight: '24px'\n    },\n    button: {\n      fontSize: '16px',\n      lineHeight: '24px'\n    },\n    weight: {\n      normal: 700,\n      light: 400\n    }\n  },\n  defaults: {\n    radius: '5px',\n    transitionTime: '200ms'\n  }\n}\n\nexport default Tokens\n","import { createGlobalStyle } from 'styled-components'\n\nexport default createGlobalStyle`\n  body * {\n    font-weight: 300;\n    font-family: 'Baloo Thambi 2', cursive;\n    -webkit-font-smoothing: antialiased;\n    -moz-osx-font-smoothing: grayscal;\n    -webkit-overflow-scrolling: touch;\n    color: ${props => props.theme.colors.black};\n  }\n\n  a {\n    text-decoration: none;\n  }\n\n  html, body, div, span, applet, object, iframe, h1, h2, h3, h4, h5, h6,\n  p, blockquote, pre, a, abbr, acronym, address, big, cite, code, del, dfn,\n  em, img, ins, kbd, q, s, samp, small, strike, strong, sub, sup, tt, var,\n  b, u, i, center, dl, dt, dd, ol, ul, li, fieldset, form, label, legend,\n  table, caption, tbody, tfoot, thead, tr, th, td, article, aside, canvas,\n  details, embed, figure, figcaption, footer, header, hgroup, menu, nav,\n  output, ruby, section, summary, time, mark, audio, video {\n    margin: 0;\n    padding: 0;\n    border: 0;\n    vertical-align: baseline;\n  }\n\n  article, aside, details, figcaption, figure, footer, header, hgroup, menu, nav, section {\n    display: block;\n  }\n\n  body {\n    font-size: ${props => props.theme.fonts.body.fontSize};\n    line-height: ${props => props.theme.fonts.body.lineHeight};\n    background-color: ${props => props.theme.colors.yellow};\n  }\n\n  ol, ul {\n    list-style: none;\n  }\n\n  blockquote, q {\n    quotes: none;\n  }\n\n  blockquote:before, blockquote:after {\n    content: '';\n    content: none;\n  }\n\n  q:before, q:after {\n    content: '';\n    content: none;\n  }\n\n  table {\n    border-collapse: collapse;\n    border-spacing: 0;\n  }\n\n  * {\n    box-sizing: border-box;\n  }\n\n  html, body, #app {\n    height: 100%;\n    width: 100%;\n  }\n  #root {\n    height: 100%;\n  }\n`\n","import React, { useEffect } from 'react'\nimport { Provider } from 'react-redux'\nimport configureStore from 'store'\nimport createSagaMiddleware from 'redux-saga'\nimport rootSaga from 'sagas'\nimport { ThemeProvider } from 'styled-components'\nimport theme from 'config/theme'\nimport GlobalStyles from 'config/global-styles'\nimport Routes from 'routes'\n\nconst sagaMiddleWare = createSagaMiddleware()\nconst store = configureStore(sagaMiddleWare)\n\nsagaMiddleWare.run(rootSaga)\n\nexport default () => {\n  useEffect(() => {\n    document.querySelector('.loading').classList.add('loading--hidden')\n  }, [])\n  return (\n    <ThemeProvider theme={theme}>\n      <Provider store={store}>\n        <GlobalStyles />\n        <Routes />\n      </Provider>\n    </ThemeProvider>\n  )\n}\n","import { createStore, applyMiddleware, compose } from 'redux'\n\nimport rootReducer from './reducers'\n\nconst isDevelopment = process.env.NODE_ENV\n\nexport default sagaMiddleWare => {\n  const middleWares = [sagaMiddleWare]\n\n  const composeEnhancers =\n    isDevelopment && window['__REDUX_DEVTOOLS_EXTENSION_COMPOSE__']\n      ? window['__REDUX_DEVTOOLS_EXTENSION_COMPOSE__']({})\n      : compose\n\n  const store = createStore(rootReducer, composeEnhancers(applyMiddleware(...middleWares)))\n\n  if (process.env.NODE_ENV === 'development') {\n    window.store = store\n  }\n\n  return store\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\n/* eslint-disable */\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\nserviceWorker.register()\n"],"sourceRoot":""}