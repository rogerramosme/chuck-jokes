{"version":3,"sources":["components/Error/Error.style.js","components/Error/Error.js","pages/Categories/Categories.style.js","pages/Categories/Categories.js","config/media.js","components/Button/Button.style.js","components/Text/Text.styled.js","components/Content/Content.style.js","assets/chuck-jokes-logo.svg","components/ChuckJokesLogo/ChuckJokesLogo.style.js","components/ChuckJokesLogo/ChuckJokesLogo.js"],"names":["Content","styled","BaseContent","ErrorTitle","Title","breakpoints","tablet","ErrorSubtitle","Subtitle","ErrorDescription","Body","Link","BaseLink","Button","BaseButton","Error","buttonText","handleError","errorMessage","onClick","to","ROUTES","INTRO","outline","length","defaultProps","ChuckJokesLogo","BaseChuckJokesLogo","CategoriesTitle","CategoriesIntro","CategoryList","section","phone","memo","useSelector","state","categories","isFetching","isSuccess","isError","data","dispatch","useDispatch","handleCategoriesRequest","useCallback","categoriesRequest","useEffect","Loading","data-testid","map","category","key","RAMDOM_JOKE","sizes","Object","keys","reduce","acc","label","css","button","props","theme","fonts","fontSize","weight","normal","defaults","radius","transitionTime","colors","black","white","grey","blue","h1","title","lineHeight","subtitle","p","body","main","breakponts","module","exports","img","src","logo","alt"],"mappings":"ohCAOO,IAAMA,EAAUC,YAAOC,IAAPD,CAAH,KAMPE,EAAaF,YAAOG,IAAPH,CAAH,IAGnBI,IAAYC,OAHO,MAQVC,EAAgBN,YAAOO,IAAPP,CAAH,KAGbQ,EAAmBR,YAAOS,IAAPT,CAAH,KAIhBU,EAAOV,YAAOW,IAAPX,CAAH,KAKJY,EAASZ,YAAOa,IAAPb,CAAH,IAIXU,GChCO,SAASI,EAAT,GAA2D,IAA1CC,EAAyC,EAAzCA,WAAYC,EAA6B,EAA7BA,YAAaC,EAAgB,EAAhBA,aACvD,OACE,kBAAC,EAAD,KACE,kBAACf,EAAD,iCACA,kBAACI,EAAD,8BACA,kBAACE,EAAD,KAAmBS,GAClBF,GAAc,kBAAC,EAAD,CAAQG,QAASF,GAAcD,GAC9C,kBAACL,EAAD,CAAMS,GAAIC,IAAOC,OACf,kBAAC,EAAD,CAAQC,QAASP,EAAWQ,QAA5B,aAYRT,EAAMU,aAAe,CACnBT,WAAY,GACZE,aAAc,K,mnCCrBT,IAAMQ,EAAiBzB,YAAO0B,IAAP1B,CAAH,KAId2B,EAAkB3B,YAAOG,IAAPH,CAAH,KAKf4B,EAAkB5B,YAAOS,IAAPT,CAAH,KAKf6B,EAAe7B,IAAO8B,QAAV,IAOrB1B,IAAY2B,MAPS,KAYrB3B,IAAYC,OAZS,MAkBZO,EAASZ,YAAOa,IAAPb,CAAH,KCtBJgC,kBAAK,WAAO,IAAD,EACyBC,aAAY,SAAAC,GAAK,OAAIA,EAAMC,cAApEC,EADgB,EAChBA,WAAYC,EADI,EACJA,UAAWC,EADP,EACOA,QAASC,EADhB,EACgBA,KAClCC,EAAWC,cAEXC,EAA0BC,uBAAY,kBAAMH,EAASI,iBAAsB,CAACJ,IAMlF,OAJAK,qBAAU,WACRH,MACC,CAACA,IAGF,oCACIJ,EAmBA,kBAACxB,EAAA,QAAD,CACEC,WAAW,YACXE,aAAa,oDACbD,YAAa0B,IArBf,kBAAC3C,EAAA,EAAD,KACGqC,GAAc,kBAACU,EAAA,EAAD,CAASC,cAAY,YAClCX,GAAcC,GACd,oCACE,kBAAC,EAAD,MACA,kBAACV,EAAD,wBACA,kBAACC,EAAD,2DACA,kBAACC,EAAD,KACGU,EAAKS,KAAI,SAAAC,GAAQ,OAChB,kBAAC,IAAD,CAAMC,IAAKD,EAAU9B,GAAE,UAAKC,IAAO+B,YAAZ,YAA2BF,IAChD,kBAAC,EAAD,KAASA,e,gLCrC7B,IAAMG,EAAQ,CACZ/C,OAAQ,IACR0B,MAAO,KAGMsB,WAAOC,KAAKF,GAAOG,QAAO,SAACC,EAAKC,GAO7C,OANAD,EAAIC,GAAS,kBAAaC,YAAZ,IACSN,EAAMK,GACvBC,IAAG,WAAH,eAICF,IACN,K,+oBCbYxD,M,MAAAA,EAAO2D,OAAtB,KACe,SAAAC,GAAK,OAAIA,EAAMC,MAAMC,MAAMH,OAAOI,YAChC,SAAAH,GAAK,OAAIA,EAAMC,MAAMC,MAAME,OAAOC,UAIhC,SAAAL,GAAK,OAAIA,EAAMC,MAAMK,SAASC,UAI7B,SAAAP,GAAK,OAAIA,EAAMC,MAAMK,SAASE,kBAI5B,gBAAG9C,EAAH,EAAGA,QAASuC,EAAZ,EAAYA,MAAZ,OAAyBvC,EAAU,cAAgBuC,EAAMQ,OAAOC,SAC3E,gBAAGhD,EAAH,EAAGA,QAASuC,EAAZ,EAAYA,MAAZ,OAAyBvC,EAAUuC,EAAMQ,OAAOC,MAAQT,EAAMQ,OAAOE,SAC1D,gBAAGjD,EAAH,EAAGA,QAASuC,EAAZ,EAAYA,MAAZ,OAAyBvC,EAAUuC,EAAMQ,OAAOC,MAAQ,iBAIjE,SAAAV,GAAK,OAAIA,EAAMC,MAAMQ,OAAOE,SACjB,gBAAGjD,EAAH,EAAGA,QAASuC,EAAZ,EAAYA,MAAZ,OAAyBvC,EAAUuC,EAAMQ,OAAOC,MAAQT,EAAMQ,OAAOG,QAInE,SAAAZ,GAAK,OAAIA,EAAMC,MAAMQ,OAAOI,S,siBCzB/C,IAAMtE,EAAQH,IAAO0E,GAAV,KACH,SAAAd,GAAK,OAAIA,EAAMC,MAAMC,MAAMa,MAAMZ,YAC/B,SAAAH,GAAK,OAAIA,EAAMC,MAAMC,MAAMa,MAAMC,cACjC,SAAAhB,GAAK,OAAIA,EAAMC,MAAMC,MAAME,OAAOC,UAGtC1D,EAAWP,IAAO0E,GAAV,KACN,SAAAd,GAAK,OAAIA,EAAMC,MAAMC,MAAMe,SAASd,YAClC,SAAAH,GAAK,OAAIA,EAAMC,MAAMC,MAAMe,SAASD,cACpC,SAAAhB,GAAK,OAAIA,EAAMC,MAAMC,MAAME,OAAOC,UAGtCxD,EAAOT,IAAO8E,EAAV,KACF,SAAAlB,GAAK,OAAIA,EAAMC,MAAMC,MAAMiB,KAAKhB,YAC9B,SAAAH,GAAK,OAAIA,EAAMC,MAAMC,MAAMiB,KAAKH,cAChC,SAAAhB,GAAK,OAAIA,EAAMC,MAAMC,MAAME,OAAOC,W,iYCdpCjE,UAAOgF,KAAtB,IAMIC,IAAW5E,OANf,O,mBCHA6E,EAAOC,QAAU,IAA0B,8C,2NCE5BnF,M,MAAAA,EAAOoF,IAAtB,KCEe,WAAAxB,GAAK,OAAI,kBAAC,EAAD,iBAAiBA,EAAjB,CAAwByB,IAAKC,IAAMC,IAAI","file":"static/js/3.622c8dd9.chunk.js","sourcesContent":["import styled from 'styled-components'\nimport { Link as BaseLink } from 'react-router-dom'\nimport BaseContent from 'components/Content'\nimport BaseButton from 'components/Button'\nimport { Title, Subtitle, Body } from 'components/Text'\nimport breakpoints from 'config/media'\n\nexport const Content = styled(BaseContent)`\n  justify-content: center;\n  text-align: center;\n  min-height: 100vh;\n`\n\nexport const ErrorTitle = styled(Title)`\n  margin-bottom: 30px;\n\n  ${breakpoints.tablet`\n    max-width: 400px;\n  `}\n`\n\nexport const ErrorSubtitle = styled(Subtitle)`\n  margin-bottom: 30px;\n`\nexport const ErrorDescription = styled(Body)`\n  margin-bottom: 40px;\n`\n\nexport const Link = styled(BaseLink)`\n  width: 100%;\n  text-decoration: none;\n`\n\nexport const Button = styled(BaseButton)`\n  width: 100%;\n  max-width: 257px;\n\n  & + ${Link} {\n    margin-top: 12px;\n  }\n`\n","import React from 'react'\nimport { string, func } from 'prop-types'\nimport { ROUTES } from 'routes'\nimport { Content, ErrorTitle, ErrorSubtitle, ErrorDescription, Button, Link } from './Error.style'\n\nexport default function Error({ buttonText, handleError, errorMessage }) {\n  return (\n    <Content>\n      <ErrorTitle>There is Something Wrong</ErrorTitle>\n      <ErrorSubtitle>And this isn&apos;t a joke</ErrorSubtitle>\n      <ErrorDescription>{errorMessage}</ErrorDescription>\n      {buttonText && <Button onClick={handleError}>{buttonText}</Button>}\n      <Link to={ROUTES.INTRO}>\n        <Button outline={buttonText.length}>Go Home</Button>\n      </Link>\n    </Content>\n  )\n}\n\nError.propTypes = {\n  buttonText: string,\n  handleError: func.isRequired,\n  errorMessage: string\n}\n\nError.defaultProps = {\n  buttonText: '',\n  errorMessage: ''\n}\n","import styled from 'styled-components'\nimport BaseChuckJokesLogo from 'components/ChuckJokesLogo'\nimport BaseButton from 'components/Button'\nimport { Title, Body } from 'components/Text'\nimport breakpoints from 'config/media'\n\nexport const ChuckJokesLogo = styled(BaseChuckJokesLogo)`\n  margin-bottom: 8px;\n`\n\nexport const CategoriesTitle = styled(Title)`\n  margin-bottom: 14px;\n  text-align: center;\n`\n\nexport const CategoriesIntro = styled(Body)`\n  text-align: center;\n  margin-bottom: 50px;\n`\n\nexport const CategoryList = styled.section`\n  display: grid;\n  width: 100%;\n  max-width: 820px;\n  grid-template-columns: 1fr;\n  grid-row-gap: 24px;\n\n  ${breakpoints.phone`\n    grid-template-columns: repeat(2, 1fr);\n    grid-column-gap: 24px;\n  `}\n\n  ${breakpoints.tablet`\n    grid-template-columns: repeat(3, 1fr);\n    grid-column-gap: 24px;\n  `}\n`\n\nexport const Button = styled(BaseButton)`\n  width: 100%;\n  text-transform: Capitalize;\n`\n","import React, { useEffect, useCallback, memo } from 'react'\nimport { Link } from 'react-router-dom'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ROUTES } from 'routes'\nimport { categoriesRequest } from 'store/reducers/categories'\nimport Content from 'components/Content'\nimport Loading from 'components/Loading'\nimport Error from 'components/Error'\nimport {\n  ChuckJokesLogo,\n  CategoriesTitle,\n  CategoriesIntro,\n  CategoryList,\n  Button\n} from './Categories.style'\n\nexport default memo(() => {\n  const { isFetching, isSuccess, isError, data } = useSelector(state => state.categories)\n  const dispatch = useDispatch()\n\n  const handleCategoriesRequest = useCallback(() => dispatch(categoriesRequest()), [dispatch])\n\n  useEffect(() => {\n    handleCategoriesRequest()\n  }, [handleCategoriesRequest])\n\n  return (\n    <>\n      {!isError ? (\n        <Content>\n          {isFetching && <Loading data-testid=\"loader\" />}\n          {!isFetching && isSuccess && (\n            <>\n              <ChuckJokesLogo />\n              <CategoriesTitle>Joke Categories</CategoriesTitle>\n              <CategoriesIntro>Select a category to start laughting. No pressure.</CategoriesIntro>\n              <CategoryList>\n                {data.map(category => (\n                  <Link key={category} to={`${ROUTES.RAMDOM_JOKE}/${category}`}>\n                    <Button>{category}</Button>\n                  </Link>\n                ))}\n              </CategoryList>\n            </>\n          )}\n        </Content>\n      ) : (\n        <Error\n          buttonText=\"Try again\"\n          errorMessage=\"Cannot get joke categories. Pleas try again later\"\n          handleError={handleCategoriesRequest}\n        />\n      )}\n    </>\n  )\n})\n","import { css } from 'styled-components'\n\nconst sizes = {\n  tablet: 768,\n  phone: 375\n}\n\nexport default Object.keys(sizes).reduce((acc, label) => {\n  acc[label] = (...args) => css`\n    @media (min-width: ${sizes[label]}px) {\n      ${css(...args)}\n    }\n  `\n\n  return acc\n}, {})\n","import styled from 'styled-components'\n\nexport default styled.button`\n  font-size: ${props => props.theme.fonts.button.fontSize};\n  font-weight: ${props => props.theme.fonts.weight.normal};\n  display: inline-flex;\n  height: 60px;\n  padding: 0 24px;\n  border-radius: ${props => props.theme.defaults.radius};\n  border: none;\n  user-select: none;\n  cursor: pointer;\n  transition: all ${props => props.theme.defaults.transitionTime};\n  text-decoration: none;\n  justify-content: center;\n  align-items: center;\n  background-color: ${({ outline, theme }) => (outline ? 'transparent' : theme.colors.black)};\n  color: ${({ outline, theme }) => (outline ? theme.colors.black : theme.colors.white)};\n  border: solid 3px ${({ outline, theme }) => (outline ? theme.colors.black : 'transparent')};\n\n  &:hover,\n  &:focus {\n    color: ${props => props.theme.colors.white};\n    background-color: ${({ outline, theme }) => (outline ? theme.colors.black : theme.colors.grey)};\n  }\n\n  &:focus {\n    outline: 2px dotted ${props => props.theme.colors.blue};\n    outline-offset: 8px;\n  }\n`\n","import styled from 'styled-components'\n\nexport const Title = styled.h1`\n  font-size: ${props => props.theme.fonts.title.fontSize};\n  line-height: ${props => props.theme.fonts.title.lineHeight};\n  font-weight: ${props => props.theme.fonts.weight.normal};\n`\n\nexport const Subtitle = styled.h1`\n  font-size: ${props => props.theme.fonts.subtitle.fontSize};\n  line-height: ${props => props.theme.fonts.subtitle.lineHeight};\n  font-weight: ${props => props.theme.fonts.weight.normal};\n`\n\nexport const Body = styled.p`\n  font-size: ${props => props.theme.fonts.body.fontSize};\n  line-height: ${props => props.theme.fonts.body.lineHeight};\n  font-weight: ${props => props.theme.fonts.weight.normal};\n`\n","import styled from 'styled-components'\nimport breakponts from 'config/media'\n\nexport default styled.main`\n  display: flex;\n  flex-flow: column;\n  align-items: center;\n  padding: 70px 24px;\n\n  ${breakponts.tablet`\n    padding-left: 48px;\n    padding-right: 48px;\n  `}\n`\n","module.exports = __webpack_public_path__ + \"static/media/chuck-jokes-logo.f9538dca.svg\";","import styled from 'styled-components'\n\nexport default styled.img`\n  width: 100%;\n  max-width: 157px;\n`\n","import React from 'react'\nimport logo from 'assets/chuck-jokes-logo.svg'\nimport LogoWrapper from './ChuckJokesLogo.style'\n\nexport default props => <LogoWrapper {...props} src={logo} alt=\"Chuck Jokes Logo\" />\n"],"sourceRoot":""}